// Code generated by goa v3.21.5, DO NOT EDIT.
//
// committee-members-service client
//
// Command:
// $ goa gen
// github.com/linuxfoundation/lfx-v2-committee-service/cmd/committee-api/design

package committeemembersservice

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Client is the "committee-members-service" service client.
type Client struct {
	CreateCommitteeMemberEndpoint goa.Endpoint
	GetCommitteeMemberEndpoint    goa.Endpoint
	UpdateCommitteeMemberEndpoint goa.Endpoint
	DeleteCommitteeMemberEndpoint goa.Endpoint
}

// NewClient initializes a "committee-members-service" service client given the
// endpoints.
func NewClient(createCommitteeMember, getCommitteeMember, updateCommitteeMember, deleteCommitteeMember goa.Endpoint) *Client {
	return &Client{
		CreateCommitteeMemberEndpoint: createCommitteeMember,
		GetCommitteeMemberEndpoint:    getCommitteeMember,
		UpdateCommitteeMemberEndpoint: updateCommitteeMember,
		DeleteCommitteeMemberEndpoint: deleteCommitteeMember,
	}
}

// CreateCommitteeMember calls the "create-committee-member" endpoint of the
// "committee-members-service" service.
// CreateCommitteeMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Committee not found
//   - "Conflict" (type *ConflictError): Member already exists
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) CreateCommitteeMember(ctx context.Context, p *CreateCommitteeMemberPayload) (res *CommitteeMemberFullWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.CreateCommitteeMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommitteeMemberFullWithReadonlyAttributes), nil
}

// GetCommitteeMember calls the "get-committee-member" endpoint of the
// "committee-members-service" service.
// GetCommitteeMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Member not found
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) GetCommitteeMember(ctx context.Context, p *GetCommitteeMemberPayload) (res *GetCommitteeMemberResult, err error) {
	var ires any
	ires, err = c.GetCommitteeMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*GetCommitteeMemberResult), nil
}

// UpdateCommitteeMember calls the "update-committee-member" endpoint of the
// "committee-members-service" service.
// UpdateCommitteeMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Member not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) UpdateCommitteeMember(ctx context.Context, p *UpdateCommitteeMemberPayload) (res *CommitteeMemberFullWithReadonlyAttributes, err error) {
	var ires any
	ires, err = c.UpdateCommitteeMemberEndpoint(ctx, p)
	if err != nil {
		return
	}
	return ires.(*CommitteeMemberFullWithReadonlyAttributes), nil
}

// DeleteCommitteeMember calls the "delete-committee-member" endpoint of the
// "committee-members-service" service.
// DeleteCommitteeMember may return the following errors:
//   - "BadRequest" (type *BadRequestError): Bad request
//   - "NotFound" (type *NotFoundError): Member not found
//   - "Conflict" (type *ConflictError): Conflict
//   - "InternalServerError" (type *InternalServerError): Internal server error
//   - "ServiceUnavailable" (type *ServiceUnavailableError): Service unavailable
//   - error: internal error
func (c *Client) DeleteCommitteeMember(ctx context.Context, p *DeleteCommitteeMemberPayload) (err error) {
	_, err = c.DeleteCommitteeMemberEndpoint(ctx, p)
	return
}
